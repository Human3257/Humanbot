import os
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,  # –ó–∞–º–µ–Ω–∏–ª–∏ Updater –Ω–∞ ApplicationBuilder
    CommandHandler,
    ContextTypes
)
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")

user_tasks = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    user_tasks[user_id] = []
    await update.message.reply_text(
        "üìù –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–¥–∞—á.\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/add <–∑–∞–¥–∞—á–∞> - –¥–æ–±–∞–≤–∏—Ç—å\n"
        "/list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫\n"
        "/delete <–Ω–æ–º–µ—Ä> - —É–¥–∞–ª–∏—Ç—å"
    )

async def add_task(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    task = ' '.join(context.args)
    
    if not task:
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ –∑–∞–¥–∞—á—É: /add –ö—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ")
        return
    
    user_tasks[user_id].append(task)
    await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {task}")

async def list_tasks(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    tasks = user_tasks.get(user_id, [])
    
    if not tasks:
        await update.message.reply_text("üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç!")
        return
    
    tasks_list = "\n".join([f"{i+1}. {task}" for i, task in enumerate(tasks)])
    await update.message.reply_text(f"üìã –í–∞—à–∏ –∑–∞–¥–∞—á–∏:\n{tasks_list}")

async def delete_task(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    tasks = user_tasks.get(user_id, [])
    
    try:
        task_num = int(context.args[0]) - 1
        deleted_task = tasks.pop(task_num)
        await update.message.reply_text(f"üóë –£–¥–∞–ª–µ–Ω–æ: {deleted_task}")
    except (IndexError, ValueError):
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä: /delete 1")
    except KeyError:
        await update.message.reply_text("‚ùå –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç!")

def main() -> None:
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ApplicationBuilder –≤–º–µ—Å—Ç–æ Updater
    application = ApplicationBuilder().token(TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("add", add_task))
    application.add_handler(CommandHandler("list", list_tasks))
    application.add_handler(CommandHandler("delete", delete_task))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
